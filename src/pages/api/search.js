export default async function handler(req, res) {
    if (req.method !== "GET") {
        return res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω" });
    }

    const { query } = req.query;

    if (!query) {
        return res.status(400).json({ error: "–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω" });
    }

    try {
        console.log("üîç –ó–∞–ø—Ä–æ—Å –∫ Unsplash —Å query:", query);

        const unsplashUrl = `https://api.unsplash.com/search/photos?query=${encodeURIComponent(query)}&client_id=${process.env.NEXT_PUBLIC_UNSPLASH_ACCESS_KEY}`;

        console.log("üì° URL –∑–∞–ø—Ä–æ—Å–∞ –∫ Unsplash:", unsplashUrl);

        const response = await fetch(unsplashUrl);

        if (!response.ok) {
            const errorText = await response.text();
            console.error("‚ùå –û—à–∏–±–∫–∞ Unsplash:", response.status, errorText);
            return res.status(response.status).json({ error: `–û—à–∏–±–∫–∞ Unsplash: ${response.status}`, details: errorText });
        }

        const data = await response.json();
        console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç Unsplash:", data);

        return res.status(200).json(data);
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", error);
        return res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", details: error.message });
    }
}
